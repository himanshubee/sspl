{"version":3,"sources":["turbopack:///[project]/components/LogoutButton.js/__nextjs-internal-proxy.mjs","turbopack:///[project]/components/SubmissionsTable.js/__nextjs-internal-proxy.mjs","turbopack:///[project]/app/admin/page.js","turbopack:///[project]/lib/mongodb.js","turbopack:///[project]/lib/storage.js","turbopack:///[project]/lib/objectStorage.js","turbopack:///[project]/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","turbopack:///[project]/node_modules/@smithy/querystring-builder/dist-es/index.js","turbopack:///[project]/node_modules/@aws-sdk/util-format-url/dist-es/index.js","turbopack:///[project]/node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js","turbopack:///[project]/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","turbopack:///[project]/node_modules/@smithy/property-provider/dist-es/ProviderError.js","turbopack:///[project]/node_modules/@smithy/property-provider/dist-es/chain.js","turbopack:///[project]/node_modules/@smithy/property-provider/dist-es/memoize.js","turbopack:///[project]/node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js","turbopack:///[project]/node_modules/@smithy/node-config-provider/dist-es/getSelectorName.js","turbopack:///[project]/node_modules/@smithy/node-config-provider/dist-es/fromEnv.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileName.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","turbopack:///[project]/node_modules/@smithy/types/dist-es/profile.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/constants.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigData.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/getHomeDir.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigFilepath.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/parseIni.js","turbopack:///[project]/node_modules/@smithy/shared-ini-file-loader/dist-es/slurpFile.js","turbopack:///[project]/node_modules/@smithy/node-config-provider/dist-es/fromSharedConfigFiles.js","turbopack:///[project]/node_modules/@smithy/property-provider/dist-es/fromStatic.js","turbopack:///[project]/node_modules/@smithy/node-config-provider/dist-es/fromStatic.js","turbopack:///[project]/node_modules/@smithy/node-config-provider/dist-es/configLoader.js","turbopack:///[project]/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointUrlConfig.js","turbopack:///[project]/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.js","turbopack:///[project]/node_modules/@smithy/querystring-parser/dist-es/index.js","turbopack:///[project]/node_modules/@smithy/url-parser/dist-es/index.js","turbopack:///[project]/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","turbopack:///[project]/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","turbopack:///[project]/node_modules/@smithy/protocol-http/dist-es/httpRequest.js","turbopack:///[project]/node_modules/@smithy/util-hex-encoding/dist-es/index.js","turbopack:///[project]/node_modules/@smithy/is-array-buffer/dist-es/index.js","turbopack:///[project]/node_modules/@smithy/util-buffer-from/dist-es/index.js","turbopack:///[project]/node_modules/@smithy/util-utf8/dist-es/fromUtf8.js","turbopack:///[project]/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/constants.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/headerUtil.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js","turbopack:///[project]/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/utilDate.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/SignatureV4Base.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js","turbopack:///[project]/node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js","turbopack:///[project]/node_modules/@smithy/util-config-provider/dist-es/types.js","turbopack:///[project]/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/constants.js","turbopack:///[project]/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3-express/classes/SignatureV4S3Express.js","turbopack:///[project]/node_modules/@smithy/signature-v4/dist-es/signature-v4a-container.js","turbopack:///[project]/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/signature-v4-crt-container.js","turbopack:///[project]/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js","turbopack:///[project]/node_modules/@aws-sdk/s3-request-presigner/dist-es/constants.js","turbopack:///[project]/node_modules/@aws-sdk/s3-request-presigner/dist-es/presigner.js","turbopack:///[project]/node_modules/@aws-sdk/s3-request-presigner/dist-es/getSignedUrl.js"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/LogoutButton.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/LogoutButton.js\",\n    \"default\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/SubmissionsTable.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/SubmissionsTable.js\",\n    \"default\",\n);\n","import Image from \"next/image\";\nimport LogoutButton from \"@/components/LogoutButton\";\nimport SubmissionsTable from \"@/components/SubmissionsTable\";\nimport { readSubmissions } from \"@/lib/storage\";\nimport { getSignedObjectUrl } from \"@/lib/objectStorage\";\n\nexport const dynamic = \"force-dynamic\";\n\nasync function attachSignedUrls(submission) {\n  const enhanced = { ...submission };\n  if (submission.photoKey) {\n    enhanced.photoUrl = await getSignedObjectUrl(submission.photoKey);\n  } else if (submission.photo) {\n    enhanced.photoUrl = submission.photo;\n  }\n\n  if (submission.paymentScreenshotKey) {\n    enhanced.paymentUrl = await getSignedObjectUrl(\n      submission.paymentScreenshotKey,\n    );\n  } else if (submission.paymentScreenshot) {\n    enhanced.paymentUrl = submission.paymentScreenshot;\n  }\n\n  return enhanced;\n}\n\nexport default async function AdminDashboard() {\n  const submissions = await readSubmissions();\n  const submissionsWithUrls = await Promise.all(\n    submissions.map((submission) => attachSignedUrls(submission)),\n  );\n\n  return (\n    <div className=\"min-h-screen bg-slate-100 py-10\">\n      <div className=\"mx-auto flex w-full max-w-6xl flex-col gap-6 rounded-3xl bg-white p-8 shadow-lg md:p-12\">\n        <header className=\"flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <Image\n              src=\"/sspl-2026.png\"\n              alt=\"SSPL Season 2026 logo\"\n              width={72}\n              height={72}\n              className=\"h-16 w-16\"\n              priority\n            />\n            <div>\n              <h1 className=\"text-3xl font-bold text-slate-900\">\n                Registration Submissions\n              </h1>\n              <p className=\"text-sm text-slate-500\">\n                Export submissions or review individual records below.\n              </p>\n            </div>\n          </div>\n          <LogoutButton />\n        </header>\n\n        <SubmissionsTable submissions={submissionsWithUrls} />\n      </div>\n    </div>\n  );\n}\n","import { MongoClient } from \"mongodb\";\n\nconst uri = process.env.MONGODB_URI;\nif (!uri) {\n  throw new Error(\n    \"Missing MONGODB_URI. Add it to your environment configuration (e.g. .env.local).\",\n  );\n}\n\nconst options = {};\n\nlet clientPromise;\nconst globalForMongo = globalThis;\n\nif (!globalForMongo._mongoClientPromise) {\n  const client = new MongoClient(uri, options);\n  globalForMongo._mongoClientPromise = client.connect();\n}\n\nclientPromise = globalForMongo._mongoClientPromise;\n\nexport async function getMongoClient() {\n  return clientPromise;\n}\n\nexport async function getSubmissionsCollection() {\n  const client = await getMongoClient();\n  const dbName = process.env.MONGODB_DB || \"sspl\";\n  const collectionName = process.env.MONGODB_COLLECTION || \"submissions\";\n  return client.db(dbName).collection(collectionName);\n}\n","import { getSubmissionsCollection } from \"./mongodb\";\n\nconst DEFAULT_SORT = { createdAt: -1 };\n\nasync function mapCursorToSubmissions(cursor) {\n  const documents = await cursor.toArray();\n  return documents.map(({ _id, ...document }) => ({\n    ...document,\n    mongoId: _id?.toString(),\n  }));\n}\n\nexport async function readSubmissions() {\n  const collection = await getSubmissionsCollection();\n  const cursor = collection.find().sort(DEFAULT_SORT);\n  return mapCursorToSubmissions(cursor);\n}\n\nexport async function addSubmission(submission) {\n  const collection = await getSubmissionsCollection();\n  await collection.insertOne(submission);\n}\n","import { S3Client, PutObjectCommand, GetObjectCommand } from \"@aws-sdk/client-s3\";\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\n\nconst endpoint = process.env.B2_S3_ENDPOINT;\nconst region = process.env.B2_S3_REGION || \"us-east-005\";\nconst accessKeyId = process.env.B2_KEY_ID;\nconst secretAccessKey = process.env.B2_APPLICATION_KEY;\nconst bucket = process.env.B2_BUCKET;\nconst defaultExpirySeconds = Number(process.env.B2_SIGNED_URL_TTL ?? 900);\n\nif (!endpoint) {\n  throw new Error(\"Missing B2_S3_ENDPOINT in environment configuration.\");\n}\n\nif (!accessKeyId || !secretAccessKey) {\n  throw new Error(\"Missing Backblaze B2 credentials (B2_KEY_ID/B2_APPLICATION_KEY).\");\n}\n\nif (!bucket) {\n  throw new Error(\"Missing Backblaze B2 bucket (B2_BUCKET).\");\n}\n\nconst s3Client = new S3Client({\n  endpoint,\n  region,\n  credentials: {\n    accessKeyId,\n    secretAccessKey,\n  },\n  forcePathStyle: true,\n});\n\nexport async function uploadObject({ key, body, contentType, metadata }) {\n  if (!key) {\n    throw new Error(\"uploadObject requires a key.\");\n  }\n  if (!body) {\n    throw new Error(\"uploadObject requires a body.\");\n  }\n\n  const command = new PutObjectCommand({\n    Bucket: bucket,\n    Key: key,\n    Body: body,\n    ContentType: contentType,\n    Metadata: metadata,\n  });\n\n  await s3Client.send(command);\n  return key;\n}\n\nexport async function getSignedObjectUrl(key, expiresIn = defaultExpirySeconds) {\n  if (!key) return null;\n  const command = new GetObjectCommand({\n    Bucket: bucket,\n    Key: key,\n  });\n  return getSignedUrl(s3Client, command, { expiresIn });\n}\n\nexport function getBucketName() {\n  return bucket;\n}\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","import { buildQueryString } from \"@smithy/querystring-builder\";\nexport function formatUrl(request) {\n    const { port, query } = request;\n    let { protocol, path, hostname } = request;\n    if (protocol && protocol.slice(-1) !== \":\") {\n        protocol += \":\";\n    }\n    if (port) {\n        hostname += `:${port}`;\n    }\n    if (path && path.charAt(0) !== \"/\") {\n        path = `/${path}`;\n    }\n    let queryString = query ? buildQueryString(query) : \"\";\n    if (queryString && queryString[0] !== \"?\") {\n        queryString = `?${queryString}`;\n    }\n    let auth = \"\";\n    if (request.username != null || request.password != null) {\n        const username = request.username ?? \"\";\n        const password = request.password ?? \"\";\n        auth = `${username}:${password}@`;\n    }\n    let fragment = \"\";\n    if (request.fragment) {\n        fragment = `#${request.fragment}`;\n    }\n    return `${protocol}//${auth}${hostname}${path}${queryString}${fragment}`;\n}\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            if (config.isCustomEndpoint === false) {\n                return undefined;\n            }\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","export class ProviderError extends Error {\n    name = \"ProviderError\";\n    tryNextLink;\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    name = \"CredentialsProviderError\";\n    constructor(message, options = true) {\n        super(message, options);\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","export function getSelectorName(functionString) {\n    try {\n        const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n        constants.delete(\"CONFIG\");\n        constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n        constants.delete(\"ENV\");\n        return [...constants].join(\", \");\n    }\n    catch (e) {\n        return functionString;\n    }\n}\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromEnv = (envVarSelector, options) => async () => {\n    try {\n        const config = envVarSelector(process.env, options);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`, { logger: options?.logger });\n    }\n};\n","export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","import { join } from \"path\";\nimport { getConfigData } from \"./getConfigData\";\nimport { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getHomeDir } from \"./getHomeDir\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport { CONFIG_PREFIX_SEPARATOR } from \"./constants\";\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const homeDir = getHomeDir();\n    const relativeHomeDirPrefix = \"~/\";\n    let resolvedFilepath = filepath;\n    if (filepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedFilepath = join(homeDir, filepath.slice(2));\n    }\n    let resolvedConfigFilepath = configFilepath;\n    if (configFilepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedConfigFilepath = join(homeDir, configFilepath.slice(2));\n    }\n    const parsedFiles = await Promise.all([\n        slurpFile(resolvedConfigFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getConfigData)\n            .catch(swallowError),\n        slurpFile(resolvedFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","export var IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n","export const CONFIG_PREFIX_SEPARATOR = \".\";\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./constants\";\nexport const getConfigData = (data) => Object.entries(data)\n    .filter(([key]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    if (indexOfSeparator === -1) {\n        return false;\n    }\n    return Object.values(IniSectionType).includes(key.substring(0, indexOfSeparator));\n})\n    .reduce((acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n}, {\n    ...(data.default && { default: data.default }),\n});\n","import { homedir } from \"os\";\nimport { sep } from \"path\";\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = homedir();\n    return homeDirCache[homeDirCacheKey];\n};\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./constants\";\nconst prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    let currentSubSection;\n    for (const iniLine of iniData.split(/\\r?\\n/)) {\n        const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = undefined;\n            currentSubSection = undefined;\n            const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n            const matches = prefixKeyRegex.exec(sectionName);\n            if (matches) {\n                const [, prefix, , name] = matches;\n                if (Object.values(IniSectionType).includes(prefix)) {\n                    currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n                }\n            }\n            else {\n                currentSection = sectionName;\n            }\n            if (profileNameBlockList.includes(sectionName)) {\n                throw new Error(`Found invalid profile name \"${sectionName}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n            if (![0, -1].includes(indexOfEqualsSign)) {\n                const [name, value] = [\n                    trimmedLine.substring(0, indexOfEqualsSign).trim(),\n                    trimmedLine.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                if (value === \"\") {\n                    currentSubSection = name;\n                }\n                else {\n                    if (currentSubSection && iniLine.trimStart() === iniLine) {\n                        currentSubSection = undefined;\n                    }\n                    map[currentSection] = map[currentSection] || {};\n                    const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n                    map[currentSection][key] = value;\n                }\n            }\n        }\n    }\n    return map;\n};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nexport const filePromisesHash = {};\nexport const fileIntercept = {};\nexport const slurpFile = (path, options) => {\n    if (fileIntercept[path] !== undefined) {\n        return fileIntercept[path];\n    }\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@smithy/shared-ini-file-loader\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n        const configValue = configSelector(mergedProfile, cfgFile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`, { logger: init.logger });\n    }\n};\n","export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n","import { fromStatic as convertToProvider } from \"@smithy/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","import { chain, memoize } from \"@smithy/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => {\n    const { signingName, logger } = configuration;\n    const envOptions = { signingName, logger };\n    return memoize(chain(fromEnv(environmentVariableSelector, envOptions), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n};\n","import { CONFIG_PREFIX_SEPARATOR } from \"@smithy/shared-ini-file-loader\";\nconst ENV_ENDPOINT_URL = \"AWS_ENDPOINT_URL\";\nconst CONFIG_ENDPOINT_URL = \"endpoint_url\";\nexport const getEndpointUrlConfig = (serviceId) => ({\n    environmentVariableSelector: (env) => {\n        const serviceSuffixParts = serviceId.split(\" \").map((w) => w.toUpperCase());\n        const serviceEndpointUrl = env[[ENV_ENDPOINT_URL, ...serviceSuffixParts].join(\"_\")];\n        if (serviceEndpointUrl)\n            return serviceEndpointUrl;\n        const endpointUrl = env[ENV_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    configFileSelector: (profile, config) => {\n        if (config && profile.services) {\n            const servicesSection = config[[\"services\", profile.services].join(CONFIG_PREFIX_SEPARATOR)];\n            if (servicesSection) {\n                const servicePrefixParts = serviceId.split(\" \").map((w) => w.toLowerCase());\n                const endpointUrl = servicesSection[[servicePrefixParts.join(\"_\"), CONFIG_ENDPOINT_URL].join(CONFIG_PREFIX_SEPARATOR)];\n                if (endpointUrl)\n                    return endpointUrl;\n            }\n        }\n        const endpointUrl = profile[CONFIG_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    default: undefined,\n});\n","import { loadConfig } from \"@smithy/node-config-provider\";\nimport { getEndpointUrlConfig } from \"./getEndpointUrlConfig\";\nexport const getEndpointFromConfig = async (serviceId) => loadConfig(getEndpointUrlConfig(serviceId ?? \"\"))();\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nimport { getEndpointFromConfig } from \"./getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./toEndpointV1\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.isCustomEndpoint) {\n        let endpointFromConfig;\n        if (clientConfig.serviceConfiguredEndpoint) {\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\n        }\n        else {\n            endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);\n        }\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n            clientConfig.isCustomEndpoint = true;\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            case \"operationContextParams\":\n                endpointParams[name] = instruction.get(commandInput);\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","export class HttpRequest {\n    method;\n    protocol;\n    hostname;\n    port;\n    path;\n    query;\n    headers;\n    username;\n    password;\n    fragment;\n    body;\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nexport class HeaderFormatter {\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nexport class Int64 {\n    bytes;\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9_223_372_036_854_775_807 || number < -9_223_372_036_854_775_808) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = HttpRequest.clone(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\n            options.hoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = HttpRequest.clone(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query)) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        const encodedKey = escapeUri(key);\n        keys.push(encodedKey);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[encodedKey] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .sort()\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { escapeUri } from \"@smithy/util-uri-escape\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4Base {\n    service;\n    regionProvider;\n    credentialProvider;\n    sha256;\n    uriEscapePath;\n    applyChecksum;\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest, algorithmIdentifier) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${algorithmIdentifier}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n    formatDate(now) {\n        const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n        return {\n            longDate,\n            shortDate: longDate.slice(0, 8),\n        };\n    }\n    getCanonicalHeaderList(headers) {\n        return Object.keys(headers).sort().join(\";\");\n    }\n}\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { HeaderFormatter } from \"./HeaderFormatter\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { SignatureV4Base } from \"./SignatureV4Base\";\nexport class SignatureV4 extends SignatureV4Base {\n    headerFormatter = new HeaderFormatter();\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        super({\n            applyChecksum,\n            credentials,\n            region,\n            service,\n            sha256,\n            uriEscapePath,\n        });\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = this.getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerFormatter.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = this.formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${this.getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest, ALGORITHM_IDENTIFIER);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\n","export const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const S3_EXPRESS_BUCKET_TYPE = \"Directory\";\nexport const S3_EXPRESS_BACKEND = \"S3Express\";\nexport const S3_EXPRESS_AUTH_SCHEME = \"sigv4-s3express\";\nexport const SESSION_TOKEN_QUERY_PARAM = \"X-Amz-S3session-Token\";\nexport const SESSION_TOKEN_HEADER = SESSION_TOKEN_QUERY_PARAM.toLowerCase();\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME = \"AWS_S3_DISABLE_EXPRESS_SESSION_AUTH\";\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME = \"s3_disable_express_session_auth\";\nexport const NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_ENV_NAME, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, NODE_DISABLE_S3_EXPRESS_SESSION_AUTH_INI_NAME, SelectorType.CONFIG),\n    default: false,\n};\n","import { SignatureV4 } from \"@smithy/signature-v4\";\nimport { SESSION_TOKEN_HEADER, SESSION_TOKEN_QUERY_PARAM } from \"../constants\";\nexport class SignatureV4S3Express extends SignatureV4 {\n    async signWithCredentials(requestToSign, credentials, options) {\n        const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\n        requestToSign.headers[SESSION_TOKEN_HEADER] = credentials.sessionToken;\n        const privateAccess = this;\n        setSingleOverride(privateAccess, credentialsWithoutSessionToken);\n        return privateAccess.signRequest(requestToSign, options ?? {});\n    }\n    async presignWithCredentials(requestToSign, credentials, options) {\n        const credentialsWithoutSessionToken = getCredentialsWithoutSessionToken(credentials);\n        delete requestToSign.headers[SESSION_TOKEN_HEADER];\n        requestToSign.headers[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        requestToSign.query = requestToSign.query ?? {};\n        requestToSign.query[SESSION_TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        const privateAccess = this;\n        setSingleOverride(privateAccess, credentialsWithoutSessionToken);\n        return this.presign(requestToSign, options);\n    }\n}\nfunction getCredentialsWithoutSessionToken(credentials) {\n    const credentialsWithoutSessionToken = {\n        accessKeyId: credentials.accessKeyId,\n        secretAccessKey: credentials.secretAccessKey,\n        expiration: credentials.expiration,\n    };\n    return credentialsWithoutSessionToken;\n}\nfunction setSingleOverride(privateAccess, credentialsWithoutSessionToken) {\n    const id = setTimeout(() => {\n        throw new Error(\"SignatureV4S3Express credential override was created but not called.\");\n    }, 10);\n    const currentCredentialProvider = privateAccess.credentialProvider;\n    const overrideCredentialsProviderOnce = () => {\n        clearTimeout(id);\n        privateAccess.credentialProvider = currentCredentialProvider;\n        return Promise.resolve(credentialsWithoutSessionToken);\n    };\n    privateAccess.credentialProvider = overrideCredentialsProviderOnce;\n}\n","export const signatureV4aContainer = {\n    SignatureV4a: null,\n};\n","export const signatureV4CrtContainer = {\n    CrtSignerV4: null,\n};\n","import { SignatureV4S3Express } from \"@aws-sdk/middleware-sdk-s3\";\nimport { signatureV4aContainer, } from \"@smithy/signature-v4\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n    sigv4aSigner;\n    sigv4Signer;\n    signerOptions;\n    static sigv4aDependency() {\n        if (typeof signatureV4CrtContainer.CrtSignerV4 === \"function\") {\n            return \"crt\";\n        }\n        else if (typeof signatureV4aContainer.SignatureV4a === \"function\") {\n            return \"js\";\n        }\n        return \"none\";\n    }\n    constructor(options) {\n        this.sigv4Signer = new SignatureV4S3Express(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async signWithCredentials(requestToSign, credentials, options = {}) {\n        if (options.signingRegion === \"*\") {\n            const signer = this.getSigv4aSigner();\n            const CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n            if (CrtSignerV4 && signer instanceof CrtSignerV4) {\n                return signer.signWithCredentials(requestToSign, credentials, options);\n            }\n            else {\n                throw new Error(`signWithCredentials with signingRegion '*' is only supported when using the CRT dependency @aws-sdk/signature-v4-crt. ` +\n                    `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. ` +\n                    `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` +\n                    `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. ` +\n                    `For more information please go to https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt`);\n            }\n        }\n        return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            const signer = this.getSigv4aSigner();\n            const CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n            if (CrtSignerV4 && signer instanceof CrtSignerV4) {\n                return signer.presign(originalRequest, options);\n            }\n            else {\n                throw new Error(`presign with signingRegion '*' is only supported when using the CRT dependency @aws-sdk/signature-v4-crt. ` +\n                    `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. ` +\n                    `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` +\n                    `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. ` +\n                    `For more information please go to https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt`);\n            }\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    async presignWithCredentials(originalRequest, credentials, options = {}) {\n        if (options.signingRegion === \"*\") {\n            throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n        }\n        return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            const CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n            const JsSigV4aSigner = signatureV4aContainer.SignatureV4a;\n            if (this.signerOptions.runtime === \"node\") {\n                if (!CrtSignerV4 && !JsSigV4aSigner) {\n                    throw new Error(\"Neither CRT nor JS SigV4a implementation is available. \" +\n                        \"Please load either @aws-sdk/signature-v4-crt or @aws-sdk/signature-v4a. \" +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\");\n                }\n                if (CrtSignerV4 && typeof CrtSignerV4 === \"function\") {\n                    this.sigv4aSigner = new CrtSignerV4({\n                        ...this.signerOptions,\n                        signingAlgorithm: 1,\n                    });\n                }\n                else if (JsSigV4aSigner && typeof JsSigV4aSigner === \"function\") {\n                    this.sigv4aSigner = new JsSigV4aSigner({\n                        ...this.signerOptions,\n                    });\n                }\n                else {\n                    throw new Error(\"Available SigV4a implementation is not a valid constructor. \" +\n                        \"Please ensure you've properly imported @aws-sdk/signature-v4-crt or @aws-sdk/signature-v4a.\" +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\");\n                }\n            }\n            else {\n                if (!JsSigV4aSigner || typeof JsSigV4aSigner !== \"function\") {\n                    throw new Error(\"JS SigV4a implementation is not available or not a valid constructor. \" +\n                        \"Please check whether you have installed the @aws-sdk/signature-v4a package explicitly. The CRT implementation is not available for browsers. \" +\n                        \"You must also register the package by calling [require('@aws-sdk/signature-v4a');] \" +\n                        \"or an ESM equivalent such as [import '@aws-sdk/signature-v4a';]. \" +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#using-javascript-non-crt-implementation-of-sigv4a\");\n                }\n                this.sigv4aSigner = new JsSigV4aSigner({\n                    ...this.signerOptions,\n                });\n            }\n        }\n        return this.sigv4aSigner;\n    }\n}\n","export const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const SHA256_HEADER = \"X-Amz-Content-Sha256\";\nexport const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const HOST_HEADER = \"host\";\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\n","import { SignatureV4MultiRegion } from \"@aws-sdk/signature-v4-multi-region\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport class S3RequestPresigner {\n    signer;\n    constructor(options) {\n        const resolvedOptions = {\n            service: options.signingName || options.service || \"s3\",\n            uriEscapePath: options.uriEscapePath || false,\n            applyChecksum: options.applyChecksum || false,\n            ...options,\n        };\n        this.signer = new SignatureV4MultiRegion(resolvedOptions);\n    }\n    presign(requestToSign, { unsignableHeaders = new Set(), hoistableHeaders = new Set(), unhoistableHeaders = new Set(), ...options } = {}) {\n        this.prepareRequest(requestToSign, {\n            unsignableHeaders,\n            unhoistableHeaders,\n            hoistableHeaders,\n        });\n        return this.signer.presign(requestToSign, {\n            expiresIn: 900,\n            unsignableHeaders,\n            unhoistableHeaders,\n            ...options,\n        });\n    }\n    presignWithCredentials(requestToSign, credentials, { unsignableHeaders = new Set(), hoistableHeaders = new Set(), unhoistableHeaders = new Set(), ...options } = {}) {\n        this.prepareRequest(requestToSign, {\n            unsignableHeaders,\n            unhoistableHeaders,\n            hoistableHeaders,\n        });\n        return this.signer.presignWithCredentials(requestToSign, credentials, {\n            expiresIn: 900,\n            unsignableHeaders,\n            unhoistableHeaders,\n            ...options,\n        });\n    }\n    prepareRequest(requestToSign, { unsignableHeaders = new Set(), unhoistableHeaders = new Set(), hoistableHeaders = new Set(), } = {}) {\n        unsignableHeaders.add(\"content-type\");\n        Object.keys(requestToSign.headers)\n            .map((header) => header.toLowerCase())\n            .filter((header) => header.startsWith(\"x-amz-server-side-encryption\"))\n            .forEach((header) => {\n            if (!hoistableHeaders.has(header)) {\n                unhoistableHeaders.add(header);\n            }\n        });\n        requestToSign.headers[SHA256_HEADER] = UNSIGNED_PAYLOAD;\n        const currentHostHeader = requestToSign.headers.host;\n        const port = requestToSign.port;\n        const expectedHostHeader = `${requestToSign.hostname}${requestToSign.port != null ? \":\" + port : \"\"}`;\n        if (!currentHostHeader || (currentHostHeader === requestToSign.hostname && requestToSign.port != null)) {\n            requestToSign.headers.host = expectedHostHeader;\n        }\n    }\n}\n","import { formatUrl } from \"@aws-sdk/util-format-url\";\nimport { getEndpointFromInstructions } from \"@smithy/middleware-endpoint\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { S3RequestPresigner } from \"./presigner\";\nexport const getSignedUrl = async (client, command, options = {}) => {\n    let s3Presigner;\n    let region;\n    if (typeof client.config.endpointProvider === \"function\") {\n        const endpointV2 = await getEndpointFromInstructions(command.input, command.constructor, client.config);\n        const authScheme = endpointV2.properties?.authSchemes?.[0];\n        if (authScheme?.name === \"sigv4a\") {\n            region = authScheme?.signingRegionSet?.join(\",\");\n        }\n        else {\n            region = authScheme?.signingRegion;\n        }\n        s3Presigner = new S3RequestPresigner({\n            ...client.config,\n            signingName: authScheme?.signingName,\n            region: async () => region,\n        });\n    }\n    else {\n        s3Presigner = new S3RequestPresigner(client.config);\n    }\n    const presignInterceptMiddleware = (next, context) => async (args) => {\n        const { request } = args;\n        if (!HttpRequest.isInstance(request)) {\n            throw new Error(\"Request to be presigned is not an valid HTTP request.\");\n        }\n        delete request.headers[\"amz-sdk-invocation-id\"];\n        delete request.headers[\"amz-sdk-request\"];\n        delete request.headers[\"x-amz-user-agent\"];\n        let presigned;\n        const presignerOptions = {\n            ...options,\n            signingRegion: options.signingRegion ?? context[\"signing_region\"] ?? region,\n            signingService: options.signingService ?? context[\"signing_service\"],\n        };\n        if (context.s3ExpressIdentity) {\n            presigned = await s3Presigner.presignWithCredentials(request, context.s3ExpressIdentity, presignerOptions);\n        }\n        else {\n            presigned = await s3Presigner.presign(request, presignerOptions);\n        }\n        return {\n            response: {},\n            output: {\n                $metadata: { httpStatusCode: 200 },\n                presigned,\n            },\n        };\n    };\n    const middlewareName = \"presignInterceptMiddleware\";\n    const clientStack = client.middlewareStack.clone();\n    clientStack.addRelativeTo(presignInterceptMiddleware, {\n        name: middlewareName,\n        relation: \"before\",\n        toMiddleware: \"awsAuthMiddleware\",\n        override: true,\n    });\n    const handler = command.resolveMiddleware(clientStack, client.config, {});\n    const { output } = await handler({ input: command.input });\n    const { presigned } = output;\n    return formatUrl(presigned);\n};\n"],"names":[],"mappings":"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","ignoreList":[0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]}