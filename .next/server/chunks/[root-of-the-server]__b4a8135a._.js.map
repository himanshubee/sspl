{"version":3,"sources":["turbopack:///[project]/app/api/register/route.js","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/lib/storage.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport path from \"path\";\nimport { promises as fs } from \"fs\";\nimport crypto from \"crypto\";\nimport { Blob } from \"buffer\";\nimport { addSubmission } from \"@/lib/storage\";\n\nconst photosDir = path.join(process.cwd(), \"public\", \"uploads\", \"photos\");\nconst paymentsDir = path.join(process.cwd(), \"public\", \"uploads\", \"payments\");\nconst OCR_API_ENDPOINT =\n  process.env.OCR_SPACE_ENDPOINT ?? \"https://api.ocr.space/parse/image\";\n\nasync function ensureDirectories() {\n  await fs.mkdir(photosDir, { recursive: true });\n  await fs.mkdir(paymentsDir, { recursive: true });\n}\n\nasync function saveFile(file, targetDir, providedBuffer) {\n  if (!(file instanceof File)) {\n    return null;\n  }\n  const buffer =\n    providedBuffer ?? Buffer.from(await file.arrayBuffer());\n\n  const safeName = file.name.replace(/[^a-z0-9.\\-_]/gi, \"_\").toLowerCase();\n  const filename = `${Date.now()}-${safeName || \"upload\"}`;\n  const fullPath = path.join(targetDir, filename);\n  await fs.writeFile(fullPath, buffer);\n\n  const publicPath = path.join(\n    \"/uploads\",\n    path.basename(targetDir),\n    filename,\n  );\n\n  return {\n    filename,\n    publicPath,\n    fullPath,\n    size: buffer.length,\n  };\n}\n\nasync function runOcrSpace(buffer, originalFilename, mimeType) {\n  const apiKey = process.env.OCR_SPACE_API_KEY;\n  if (!apiKey) {\n    throw new Error(\"OCR_SPACE_API_KEY is not configured.\");\n  }\n\n  const formData = new FormData();\n  formData.append(\"apikey\", apiKey);\n  formData.append(\"language\", \"eng\");\n  formData.append(\"isOverlayRequired\", \"false\");\n  formData.append(\"scale\", \"true\");\n  formData.append(\"OCREngine\", \"5\");\n\n  const sanitizedName =\n    originalFilename?.replace(/[^a-z0-9.\\-_]/gi, \"_\").toLowerCase() ||\n    \"payment.jpg\";\n  const blob = new Blob([buffer], {\n    type: mimeType || \"application/octet-stream\",\n  });\n  formData.append(\"file\", blob, sanitizedName);\n\n  const response = await fetch(OCR_API_ENDPOINT, {\n    method: \"POST\",\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error(\n      `OCR request failed with status ${response.status} ${response.statusText}`,\n    );\n  }\n\n  const payload = await response.json();\n\n  if (payload.IsErroredOnProcessing) {\n    const message = Array.isArray(payload.ErrorMessage)\n      ? payload.ErrorMessage.join(\"; \")\n      : payload.ErrorMessage || \"OCR processing failed.\";\n    throw new Error(message);\n  }\n\n  const text = payload.ParsedResults?.map((r) => r.ParsedText).join(\"\\n\") ?? \"\";\n  return text;\n}\n\nfunction paymentLooksValid(text) {\n  if (!text) return false;\n  const normalized = text.toLowerCase();\n  const zeroFriendly = normalized.replace(/o/g, \"0\");\n  const digitsOnly = zeroFriendly.replace(/[^0-9]/g, \"\");\n  if (digitsOnly.includes(\"900\")) {\n    return true;\n  }\n\n  if (zeroFriendly.includes(\"₹900\") || zeroFriendly.includes(\"rs 900\")) {\n    return true;\n  }\n\n  const sanitized = zeroFriendly.replace(/[,₹]/g, \"\");\n  const patterns = [\n    /\\b900(?:\\.00)?\\b/,\n    /\\b900\\/-\\b/,\n    /\\brs\\.?\\s*900(?:\\.00)?\\b/,\n    /\\binr\\.?\\s*900(?:\\.00)?\\b/,\n    /\\bamount\\s*:?\\.?\\s*900(?:\\.00)?\\b/,\n    /\\bamount\\s*:?\\.?\\s*rs\\.?\\s*900(?:\\.00)?\\b/,\n  ];\n  return patterns.some((regex) => regex.test(sanitized));\n}\n\nexport async function POST(request) {\n  await ensureDirectories();\n  const formData = await request.formData();\n\n  const name = formData.get(\"name\")?.toString().trim();\n  const address = formData.get(\"address\")?.toString().trim();\n  const playerType = formData.get(\"playerType\")?.toString();\n  const playerTypeOther = formData.get(\"playerTypeOther\")?.toString().trim();\n  const tshirtSize = formData.get(\"tshirtSize\")?.toString();\n  const jerseyName = formData.get(\"jerseyName\")?.toString().trim();\n  const jerseyNumber = formData.get(\"jerseyNumber\")?.toString().trim();\n  const foodType = formData.get(\"foodType\")?.toString();\n  const foodTypeOther = formData.get(\"foodTypeOther\")?.toString().trim();\n  const feeResponse = formData.get(\"feeResponse\")?.toString();\n  const feeResponseOther = formData.get(\"feeResponseOther\")?.toString().trim();\n  const photo = formData.get(\"photo\");\n  const paymentScreenshot = formData.get(\"paymentScreenshot\");\n\n  const maxUploadSize = 10 * 1024 * 1024; // 10 MB\n\n  if (\n    !name ||\n    !address ||\n    !playerType ||\n    !tshirtSize ||\n    !jerseyName ||\n    !jerseyNumber ||\n    !foodType ||\n    !feeResponse ||\n    !(photo instanceof File) ||\n    !(paymentScreenshot instanceof File)\n  ) {\n    return NextResponse.json(\n      { error: \"Please complete all required fields.\" },\n      { status: 400 },\n    );\n  }\n\n  if (playerType === \"other\" && !playerTypeOther) {\n    return NextResponse.json(\n      { error: \"Please specify your player type.\" },\n      { status: 400 },\n    );\n  }\n\n  if (foodType === \"other\" && !foodTypeOther) {\n    return NextResponse.json(\n      { error: \"Please specify your food preference.\" },\n      { status: 400 },\n    );\n  }\n\n  if (feeResponse === \"other\" && !feeResponseOther) {\n    return NextResponse.json(\n      { error: \"Please describe your fee status.\" },\n      { status: 400 },\n    );\n  }\n\n  if (photo.size > maxUploadSize || paymentScreenshot.size > maxUploadSize) {\n    return NextResponse.json(\n      { error: \"Uploads must be 10 MB or smaller.\" },\n      { status: 413 },\n    );\n  }\n\n  try {\n    const paymentBuffer = Buffer.from(await paymentScreenshot.arrayBuffer());\n\n    const text = await runOcrSpace(\n      paymentBuffer,\n      paymentScreenshot.name,\n      paymentScreenshot.type,\n    );\n    console.log(\"OCR output:\", text);\n\n    if (!paymentLooksValid(text)) {\n      return NextResponse.json(\n        {\n          error:\n            \"Unable to confirm the ₹900 payment from the screenshot. Please ensure the amount is clearly visible.\",\n        },\n        { status: 422 },\n      );\n    }\n\n    const savedPhoto = await saveFile(photo, photosDir);\n    const savedPayment = await saveFile(\n      paymentScreenshot,\n      paymentsDir,\n      paymentBuffer,\n    );\n\n    const submission = {\n      id: crypto.randomUUID(),\n      createdAt: new Date().toISOString(),\n      name,\n      address,\n      playerType,\n      playerTypeOther: playerType === \"other\" ? playerTypeOther : \"\",\n      tshirtSize,\n      jerseyName,\n      jerseyNumber,\n      foodType,\n      foodTypeOther: foodType === \"other\" ? foodTypeOther : \"\",\n      feeResponse,\n      feeResponseOther: feeResponse === \"other\" ? feeResponseOther : \"\",\n      photo: savedPhoto?.publicPath,\n      paymentScreenshot: savedPayment?.publicPath,\n      ocrText: text,\n    };\n\n    await addSubmission(submission);\n\n    return NextResponse.json(\n      { success: true, submissionId: submission.id },\n      { status: 201 },\n    );\n  } catch (error) {\n    console.error(\"Registration error\", error);\n    return NextResponse.json(\n      { error: \"Something went wrong while processing the registration.\" },\n      { status: 500 },\n    );\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { addRequestMeta, getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { setReferenceManifestsSingleton } from \"next/dist/esm/server/app-render/encryption-utils\";\nimport { createServerModuleMap } from \"next/dist/esm/server/app-render/action-utils\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/register/route\",\n        pathname: \"/api/register\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/register/route.js\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    if (routeModule.isDev) {\n        addRequestMeta(req, 'devRequestTimingInternalsEnd', process.hrtime.bigint());\n    }\n    let srcPage = \"/api/register/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, parsedUrl, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname, clientReferenceManifest, serverActionsManifest } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    const render404 = async ()=>{\n        // TODO: should route-module itself handle rendering the 404\n        if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n            await routerServerContext.render404(req, res, parsedUrl, false);\n        } else {\n            res.end('This page could not be found');\n        }\n        return null;\n    };\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                if (nextConfig.experimental.adapterPath) {\n                    return await render404();\n                }\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isStaticGeneration = isIsr && !supportsDynamicResponse;\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        setReferenceManifestsSingleton({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: createServerModuleMap({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            cacheComponents: Boolean(nextConfig.cacheComponents),\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: nextConfig.cacheLife,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${srcPage}`);\n                }\n            });\n        };\n        const isMinimalMode = Boolean(process.env.MINIMAL_MODE || getRequestMeta(req, 'minimalMode'));\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!isMinimalMode && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isStaticGeneration,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil,\n                isMinimalMode\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!isMinimalMode) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(isMinimalMode && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, // @ts-expect-error - Argument of type 'Buffer<ArrayBufferLike>' is not assignable to parameter of type 'BodyInit | null | undefined'.\n            new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${srcPage}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isStaticGeneration,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { promises as fs } from \"fs\";\nimport path from \"path\";\n\nconst DATA_DIR = path.join(process.cwd(), \"data\");\nconst SUBMISSIONS_FILE = path.join(DATA_DIR, \"submissions.json\");\n\nasync function ensureDataFile() {\n  try {\n    await fs.access(SUBMISSIONS_FILE);\n  } catch {\n    await fs.mkdir(DATA_DIR, { recursive: true });\n    await fs.writeFile(SUBMISSIONS_FILE, \"[]\", \"utf-8\");\n  }\n}\n\nexport async function readSubmissions() {\n  await ensureDataFile();\n  const raw = await fs.readFile(SUBMISSIONS_FILE, \"utf-8\");\n  return JSON.parse(raw);\n}\n\nexport async function addSubmission(submission) {\n  await ensureDataFile();\n  const all = await readSubmissions();\n  all.unshift(submission);\n  await fs.writeFile(SUBMISSIONS_FILE, JSON.stringify(all, null, 2), \"utf-8\");\n}\n"],"names":[],"mappings":"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","ignoreList":[1]}