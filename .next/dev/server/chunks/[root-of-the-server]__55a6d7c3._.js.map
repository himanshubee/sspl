{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/himanshuverma/Documents/GitHub/sspl/lib/auth.js"],"sourcesContent":["const fallbackUser = \"admin\";\nconst fallbackPass = \"sspl@secure\";\n\nexport function getCredentials() {\n  return {\n    username: process.env.ADMIN_USERNAME || fallbackUser,\n    password: process.env.ADMIN_PASSWORD || fallbackPass,\n  };\n}\n\nexport function credentialsAreValid(inputUser, inputPass) {\n  if (!inputUser || !inputPass) return false;\n  const { username, password } = getCredentials();\n  return (\n    inputUser.trim() === username.trim() &&\n    inputPass === password\n  );\n}\n\nfunction base64Encode(raw) {\n  if (typeof Buffer !== \"undefined\") {\n    return Buffer.from(raw, \"utf-8\").toString(\"base64\");\n  }\n  if (typeof btoa !== \"undefined\") {\n    return btoa(unescape(encodeURIComponent(raw)));\n  }\n  throw new Error(\"No base64 encoder available in this environment.\");\n}\n\nexport function computeSessionToken() {\n  const { username, password } = getCredentials();\n  return base64Encode(`${username}:${password}`);\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,eAAe;AACrB,MAAM,eAAe;AAEd,SAAS;IACd,OAAO;QACL,UAAU,QAAQ,GAAG,CAAC,cAAc,IAAI;QACxC,UAAU,QAAQ,GAAG,CAAC,cAAc,IAAI;IAC1C;AACF;AAEO,SAAS,oBAAoB,SAAS,EAAE,SAAS;IACtD,IAAI,CAAC,aAAa,CAAC,WAAW,OAAO;IACrC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;IAC/B,OACE,UAAU,IAAI,OAAO,SAAS,IAAI,MAClC,cAAc;AAElB;AAEA,SAAS,aAAa,GAAG;IACvB,IAAI,OAAO,WAAW,aAAa;QACjC,OAAO,OAAO,IAAI,CAAC,KAAK,SAAS,QAAQ,CAAC;IAC5C;IACA,IAAI,OAAO,SAAS,aAAa;QAC/B,OAAO,KAAK,SAAS,mBAAmB;IAC1C;IACA,MAAM,IAAI,MAAM;AAClB;AAEO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;IAC/B,OAAO,aAAa,GAAG,SAAS,CAAC,EAAE,UAAU;AAC/C","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/himanshuverma/Documents/GitHub/sspl/app/api/login/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { computeSessionToken, credentialsAreValid } from \"@/lib/auth\";\n\nconst COOKIE_NAME = \"admin_session\";\nconst ONE_DAY = 24 * 60 * 60;\n\nexport async function POST(request) {\n  const body = await request.json();\n  const username = body?.username;\n  const password = body?.password;\n\n  if (!credentialsAreValid(username, password)) {\n    return NextResponse.json(\n      { error: \"Invalid credentials.\" },\n      { status: 401 },\n    );\n  }\n\n  const token = computeSessionToken();\n  const response = NextResponse.json({ success: true });\n  response.cookies.set({\n    name: COOKIE_NAME,\n    value: token,\n    path: \"/\",\n    maxAge: ONE_DAY,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n    sameSite: \"lax\",\n  });\n  return response;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,cAAc;AACpB,MAAM,UAAU,KAAK,KAAK;AAEnB,eAAe,KAAK,OAAO;IAChC,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,WAAW,MAAM;IACvB,MAAM,WAAW,MAAM;IAEvB,IAAI,CAAC,IAAA,oIAAmB,EAAC,UAAU,WAAW;QAC5C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;IAEA,MAAM,QAAQ,IAAA,oIAAmB;IACjC,MAAM,WAAW,gJAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAK;IACnD,SAAS,OAAO,CAAC,GAAG,CAAC;QACnB,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,UAAU;QACV,QAAQ,oDAAyB;QACjC,UAAU;IACZ;IACA,OAAO;AACT","debugId":null}}]
}